---
- name: Install and configure HAProxy and Keepalived
  hosts: load_balancers
  gather_facts: false
  become: true

  vars:
    haproxy_config: |
      frontend k3s-frontend
          bind *:6443
          mode tcp
          option tcplog
          default_backend k3s-backend

      backend k3s-backend
          mode tcp
          option tcp-check
          balance roundrobin
          default-server inter 10s downinter 5s
          server k3s-server-01 192.168.1.201:6443 check
          server k3s-server-02 192.168.1.202:6443 check
          server k3s-server-03 192.168.1.203:6443 check

  tasks:
  - name: Set timezone to Europe/Brussels
    community.general.timezone:
      name: Europe/Brussels

  - name: Ensure required packages are installed
    ansible.builtin.apt:
      name:
      - haproxy
      - keepalived
      state: present
      update_cache: yes

  - name: Check if haproxy.cfg.bak exists
    ansible.builtin.stat:
      path: /etc/haproxy/haproxy.cfg.bak
    register: haproxy_cfg_bak

  - name: Backup existing haproxy.cfg
    ansible.builtin.copy:
      src: /etc/haproxy/haproxy.cfg
      dest: /etc/haproxy/haproxy.cfg.bak
      remote_src: yes
    when: not haproxy_cfg_bak.stat.exists
    ignore_errors: yes

  - name: Ensure haproxy.cfg contains the required configuration
    ansible.builtin.blockinfile:
      path: /etc/haproxy/haproxy.cfg
      marker: "# {mark} Ansible managed K3s configuration"
      block: "{{ haproxy_config }}"
    notify: Restart haproxy

  - name: Deploy keepalived.conf on the first load balancer
    when: "inventory_hostname == groups['load_balancers'][0]"
    ansible.builtin.copy:
      src: config/keepalived-lb1.conf
      dest: /etc/keepalived/keepalived.conf
      owner: root
      group: root
      mode: '0644'
    notify: Restart keepalived

  - name: Deploy keepalived.conf on the second load balancer
    when: "inventory_hostname == groups['load_balancers'][1]"
    ansible.builtin.copy:
      src: config/keepalived-lb2.conf
      dest: /etc/keepalived/keepalived.conf
      owner: root
      group: root
      mode: '0644'
    notify: Restart keepalived

  - name: Ensure services are enabled and started
    ansible.builtin.systemd:
      name: "{{ item }}"
      enabled: yes
      state: started
    loop:
    - haproxy
    - keepalived

  handlers:
  - name: Restart haproxy
    systemd:
      name: haproxy
      state: restarted

  - name: Restart keepalived
    systemd:
      name: keepalived
      state: restarted
